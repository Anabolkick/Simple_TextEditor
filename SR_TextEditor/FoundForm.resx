<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADNFAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgEAAAA9ntg7QAAFJRJ
        REFUeNrtnXl4VUWah9+b/RKyEfYtkU0MCBGVRQUV0cahxaXbdgH7aZvRx/YRFbVRdFocbbSRURHHacTR
        7mm11UcblXZDW0ABZZF9kc0QAglrVsjNJdudPzAiCJg693x16t5bb/2bk1tV3+/UqeWr7wOLxWKxWCwW
        i8VisVgsFovFYrFYLBaLxWKxWCwWi8VisVgsFovFEtn4Yrblcce0PUSjFUC0kkAKKaTRmmzSyCSTVOLI
        Jv4Hf9NIKQ3UUE4FBymllCqC1FBvBRCpRk8lgxy6k0sHOtKRtvhJIoFEEk7xXAO11FNLkP2UUEIJhRSw
        gwqqqbMCMJ9UWtGLfM6gG6eRQUsSw/yPdVRTSSHb2cg6NrGfaisA80imPf05m/70oS3pQr9ykP1sZA0r
        WM0eaqwATCCLXgxkMOfSkVRNvxlgN6v5ii/ZQqkVgHem78twhpNHtiftCFHOJuYxj7WRK4PIFEAq/biM
        4ZxJlgG1qWAj8/iE1Ry0ApAmji6MYDRDaGNYzUpZwvt8QmFk7ShEkgBSGMAvGEnPsGf2UtRTwMfMZll0
        TBBNIo2f8Qp7CUVAOcAbXEmmNZpbZHAtc6iICOM3lYPM5de0tsYLl3R+yYdUR5Txm0qQBYw1YpoaoaQy
        mn9yKCKN31QC/IsbybDGVCWBC3iTqog2/lERzOEykqxRm08e09kdFcY/OjH8M/kxfPiuQDYT2BxVxm8q
        3zKJ9tbApyKei/iIuqg0f4gQ9czncmN3MTynI4+xJ2qNf/Rj8BTdrLGPJ47LWEhD1Jv/SFnOlad0S4k5
        WjEpyiZ9P1VKmUJba/gjDOCdKP7un6w08CGDrPETuZ5vYs74R9cFN5PsrQHiPf31TH7PH+kcs/LPYjgt
        WU0gNpvfi9epjdm3/+jS8B36xqL5z2dJzBu/qaziklgz/8gY/vKfeDZwlTcbxV7MAXxcywx6xOZ37yRk
        MYz9rCcU/QJI5GaeopO1+XGkcSEBVtMQ3QJI4U4eI9va+wT4GYqPr/VeQdMrgDQeZBJp1tYnIYnzSGMZ
        wehsXjb/zWE74fvJZeFL0XlonMHMmDnsCa808jd9H0ldn4AW/IHb7QlYs/DRlzQWUhs9AkjkXiZ6vesd
        QcSRTxxf6ghPoUMA8dzKI9pu7kYH8ZxNDcvlr5npEMCNTLXe8cokMpADrJLeGpIXwGimW1dIR6QwmCLW
        R7YALuY5cq0tHZLKQLawNXIFkM8L5Fk7hkEG57CCXZEpgPY8ywXWhmHSmh7MpzLyBODnEcbauzAukEsG
        86R2BaQE4OMWHrD34VyiDwG+klkPSAlgOE/bMz8XrZTPFjbJvKkSdOFVhhnbnfUEqKWOBoJUfPdexZNN
        PPEkkYKfOANrvYrrJNYDEgJI5gnuNuzrH6KSUnZSRBGFFFFGBYdpoO47AfhIBvy0oj2dvys5tKWlQW14
        mTvdj1IqcTxzDeMMMn8lxazia1byLdUEmjmZSsJPFmeQTz796GSED8MNLGWW+SNAHm8a4uZ8gOV8znK+
        oYzDjv9LCtnkcSEjyPNcBt9yHSuMebVOiJ8XDThRP8hXTGawqwZrw0ieZo3HLi1vmO5PdZ3nYV2KmMko
        ofhccXTi18zloGetq+FWk81/Gss99q6fRn9xt5NMRvMGBzxq4zf0MdX8CUzz0I1qE4/SR9sCzs8wXvFo
        tHsZv5kCuJh9Hpl/D1Ppqb29fq5hgQcX26u42kTzpzHbE+MfZg4Xe+Zt2I572KK9zfONC5UNjCXggfk3
        cJvnUXn78SpBra2u5S7TzN+JpdqNH+Qv9DZk9LuTQs3CN6Pl33O/dp//XUwwaqN2CB9Rr7H9j5u02d6N
        9ZrNv5hLjPM1aMM0jWGtC8g3p+kP0ah12jeL00z7BgLgZ4LG/YEZply0yWOrRvNX80eDt0PjuZ4CbR/B
        c0xoso8pGs1fzn2kGGv+I4zSltlkhsdBvgDooTG0815uMT7Srp+HtS2Id3Cm9w2+V9v3v5gbjPTVOdb8
        k7XuhzzidYM7sExTU/dxo+HG12/+EOu9ng7frOl8vJLb7Nt/glLPeC+bnMFcLc0M8EAEfPsne7IZvshL
        7+vhlGtoYi2Pm3oA6rn5QxzkCq8aHcd0LU18RSwdfOSbP0SI/w1ndAxnLymXn2no3FVMocr1/9qCVLJJ
        I47WxFNNFbWUUk3QQdJXPxO538Mx6hJ6stELAYzQEO1zPw+7eiMmixwGkEcu3WlHIj6S8VFPHSEOUUIx
        W1nHWnY1OxO41+aHrox0LgDnpPKe+OB2mEmu7XVlMYKpfMGen4xQXkMJc7mfc5sR1sbbwb+pfOpFasr+
        lIg37E1XnD185PF7FihnH97HbK4/pe+NGeYPcYDz9AvgTnEPgO0uHHb4yONxtjnerQywiHEnkaEp5g8R
        4iHd5m/J++JbHJPCPvFvz0NsC7smQT5k1I+uuptk/hALdIfhGiCe5evzMENLJfJvzHfNR6ecaXQw1vwh
        yhiqVwDjhT8AFVwZVv3a8ASlrtaokc++72TTzB8ixIM6zZ/Ma8LNmRVWXNGzmCPin1fAdfhIMdD8Iebo
        DMWZI+wDEJ6vyyg2iNVsH/fwmEbPv+aXHZyuTwCjhbvgBcebmz5+yQ7Ruh02NNNZkDFOOszZEet5tBCU
        135ec5g1w8dYZtBVVPxJhp5LJjPEyaaZEwGkM0C0Ke+z1OGT1xw3V48tBjjZD3QigHaiX5tyXnUYz+MS
        ptEuZs0P3eiiRwB9hMIvHOELljl6rh9PG3pbQBdZ9NMjgP6CM4B6PuCQo8ZPdtL8qCJJjwBa0F+wETuY
        7+CpeG5ndIyb/8irqew6oy6ADNF7qQvY4eCpixhv8xEBPWglL4BOgsEJAnzgYAGYxT0xPfn7YU/kyAug
        h+Cl7M0scfDUr2Iv9/ZJSFWfBqsLoKfg3bxl7FN+5jRut/nIviNRPVKSqgCSBP0A61jmIHXydSbcjzOG
        bqqvp6oAWqh/ZZpNmYMwqJ251ial+AG5qkt0VQH4Bbdat1Gk/MwVMb/6P5YOqjM0VQG0EvQ/XamcGSed
        q+zy7xhSaSsrgA5iU8A6VinnyezL2dbmx+Cnk9oDqu9PB7ErEIfYovzMZS5cjKzjMwq1ziNCZPNzoX70
        01FWAO3EEkFVUaz4RIYrjpC1vMC7WkOtNJLLQKHJdJzqlpiqADLFuqVY+QZgDme48j42gIPlZzhUslts
        NZWJD4X8YmpzgDjBKeAOAopPDBA9lpakRjAXaKaax5KaABIFBVBEUOnvfeQbHzTCCwFkyAogU6jaDcqn
        gKl0j1DzA3YEOJ46KhSfaCHs/ClLieJ413zS1eZ1qnMAqUVgg3JGvNaqWx5GUSaVCxi/2opGTQByq+UG
        5cgc7YyPGHoqasTWHT41K6mOAFIHr/XKa4C0iJ0CAgTEBJCsZlNVAUh1uvonwG9CnFwDR4BESQHIfQQa
        lCdFLawA3MAUAaCyexUFBMUmgcICaBSqR7zylC5gyjvkiMYwshl7KIBGsU6PV77dHqA+ggUQL7aGqVd7
        SVUFUCPWIao7DNURPQLI3TEOSgpA8o1QvW62R2wvTQcpYlNYxbmUmgAaxL5cCcoCKOVABAtAbg0TVBsZ
        1QRQp+y111zUTxmqHV0iM2cEkBp7q9TuVpkigHjlo51qtkWwAOS2sSplBVAh1iU5itvMIVY5DCRjAq3E
        XOtEBdAoNgJAV+V1wCrKIlYAcs61FZICQHAE6KKcDrKIrREsACkq1dYBqgLYJzbspit3SjkLXfll/fsJ
        SWICCLFX7QFVr+ASaoS2MFrSSzk60Cf8LmwntSTGck5Yc/I4FjNX6YkUMQHUKDvXK9KHPWKhDqcp1yaL
        BUYEabxXsd7tWCdUkwMMUlWvGmWC08CzlfcCynnfgFPEKtYoPtFezJ2tWvUToCqAgOAQc7rqvTZgthfZ
        co5jJ98oPtFXzLl2b7NzHTkWQKFYR2aTr/xMAa97PgYsVn3rOFPMtU75eo2qAOrYLtaRyQxy4HDyDweX
        St0kyDzFg+k0wUB7Barnteqz362Cp3CDHFz22sQLnu4IrucLxSfaiAXaq1ffHlcXQIGy+2bzyXOUJ+AV
        ZRO4R4i32K34TG+xO43VFMgLoJhSse5M43IHNTrA055tCm/kbeVnhogF2qtUn6HFOfgRyQ3YEXR28NSn
        zBTzVjwVDfxV+Z3L4kKx+mxXfznVBXBIedWrQneGOXiqjhl84oEAlvCa8jN96SNWn7XqWZadbIGuEZwG
        JjHKkbvkXh7RvhooY6ry9x8uVI/n2+zXYLWecTCPYsFt1T0McVivq0TrdXxp4AkHpyIZfCZWo/2cq0f5
        WXwh2rUzHIZ+8/EbyrQJYLajufz5HBCr0XLBMN7HfTamCyeNcxr8LYHbNUlgiaO1fBz/JVinF/XFTLye
        GtHuner4CloC49gnbv7lDvMa9hDMt1jLOLTRk+2iHbyNvDDGpxsoFK3dV47TWt4tmHC3RGfQ7Ba8I/yO
        TQ3La3YonwvVq5H3HIuzNYsEe+xT9XQx4TBRWAC7uSis+uXwZw66XqsqngojN8mvRDMOP4pWhgjOZo+U
        98J09vIzhpWu1mg9Y8I4xm3FXMHequRSvQLIFFzPHilBfhd2LbvzDLtdqU0xT4aZLvMWgoK9tVTXEvAo
        k8Tn2htcCAWbyGBmhimCnfwPg8O8yZPLCtG+moJ2BmpYbs1y5fpEIoN5krUO3sBqVvI4A8JeX/uYTKNg
        P5VzsX4BpIt+05oMcJtLtfXRmTH8jU1UNeN3GyhjOc9xNe1dCYozQHjZvMh52Hzn2q7iI0YIxxdowSQ2
        uuLuEWIXr/E2bejDOeSRS1dakggk46ORWkLUcZgKitjEVlazmVKXjlbSmUiuaD997NxHIxx99+Yj4YYB
        fMFYdrr8P5NJJZOupBNHNvHUU0Y9FeynkgAHcdfN9G7+JJrYbjejWIUHJDJL/CMQIsSMiI4Jej47hPvn
        de/65wqBzZYTzQTuidjUUO3EZ0o13OBd87JFNzd/OMv9bURmB0zhSeqF+2aFapYgd7lTvIFNW8O/iDjz
        xzOBauF+aeQhbxvZjfVaBBBiu+7NzrC5kVLxXvk2jHNTV/DxmCYBhNgQ5gGRXi4TPpQ+Up7xPmLymRRp
        k8AWRkeI+YdqGRn3qF4GlyCBGdoEEKKYmyIgSvilbNDSGy+L7i80m3PYpVECBxgvFmHLHa6iQEtP7HMl
        caYrY8CzGgUQoorHXEgZK0McN2lzTjfk/Qfop0nzTaWO2YJXrJ2Txn3ijjLGvf8APqZoFUCIEOu51rD9
        wR78H4e1tf8lc95/gNM1TXt+WMp41JjUcT4uZYnGthc69kwW4y5qtUugnnmMNuBNaM19lGhsdyP/aUyg
        /+9pI+4leOJSwQv09bDdyYziU83iX67hGN4BVzXL20aibOZujz4G/ZhJuebW1vBbE80Pfv7ikQBC1LKY
        WwUj8P4YHz15kK0etPVdwRzuYb8Pmz2TQIhalnGHowgjqiTQnyfYJOroebJS5Pj6vBZuF/V+b84OwSru
        p59YMHZIZyjPazz/OH7aO8lsz4gMZnsqgCNz5F28xW/IdfnUIJUB3MdcbVs9JyqfuD3XcV9Ng3mDHAOk
        WMt25rOA1ZSohk89jngyyeECRjCQtp6+f3sYwzzTBQB3MM0YN84g+9nIClawhlICSglb/aTTjXzy6U83
        sj1fedczmT+5HQVIQgBpPM9NhgigiQD7KWQHRRRSRBGV1BOilkYaqCcJH3EkAfGk04HOdKYTnehJFzKM
        OX5+l3Hux0OUGdB683fOMkwCR9+jAAGqqKSRMuoIcIhs4kmkFXEk0xo/fgMd0bdyPSsN7dMTcLUGf7hY
        Koe4WcZQUsPbNhIYGgG+O5FBI8/zrEyy7HixKq8lh37Wdq7wTyaqxwD1VgAQZC0DtezLRTtrGC+XpUFy
        kC6jgIvCzuoV65QwgUVy/172K13IboaRaq0Yxkv0AG9J/oD0NG0j5QyL6Nu9XlLNZF6UDQAtP09fRy0X
        CCWbjG6CPMl06XQ48gJoZCWJYQdZij0aeJ4pqimgTBQA1PM1GWGmZ401QvyV/5Ba+ukWANSylI5GevKb
        yj+4jwM6fkjXwFzDMrq5EPcvNpjLXezS81P6vswHWUJXekdkpA+9fMhd6unfzBcAVLKQVvSzc4FT0Mgb
        TBDMzuqpAOAQC0nhrIgN+SRNHS8x0UEiqogRAARZSD0DDb/g7Q0BnuFhyvX+qP7VeR1LqGQgLazFj6GS
        KUwTTMtrFPGM0RpUwvyyl1tibbf0CjZZw39XCrg2FldHg/iXNT4hFjpKlxsVdGGWxzeJvC61vEK3WDU/
        QEvuZU/Mmv8AD5l70VMXcYzky5g0/9dcaXdEjpDLc1rijptTArxML2v4o6Qw1oMoQ16VbdxmHeV+TB9e
        jIFxIMDrjpNjRz1+bhROr+Z12cA4WlpDn4ruTGd/VBq/nJmOks7HHIlczNsciirjB/mAy80K7Wg2LbmB
        RdRFhfEbWcE4e0FGnQ7cwUoaItz463nAiIgpEUoX7mWtJ9G43CjfMCm2N3rdoRv3s9KDQLThlHrW8Qe7
        1eMenfh35kXIxDDIYsbbYd99sriav2tLx+Cs7GcOY42JYd4MIs0NIYUzGMXP6WvcVuphNvMhc1jHoUjq
        0Mj0Q2nD+YzkQk4zYmVdy04W8zELKSZkQH1iQAAACXTiPC5hKF09u35+mF0s5jMWs1MpAqEVgGsk0olz
        GcIgepGtrTUhytjGUpawlF2RavroEEBTK7LoySDO5ky6kCnmZtFAJbtYz9csZQulkTfgR6sAmkgik1z6
        04/e5NKKVFfmCLVUU04hm1nLGgqo4HD0dFl0OiPHkUZLutKd7uTQgQ60xk8ySSQ0o8UN1BGkhjJKKGYn
        2/iWIqo4REP0dVX0e6MnkkIK6bQnm2zSyCKDFvjJ+FHbD1JJOYcop5K9FFNBkBrpEC1WAF4QT/wJ7uHU
        UycbkMlisVgsFovFYrFYLBaLxWKxWCwWi8VisVgsFovFYrFYLBaLxWKxWNzn/wGHvsechBHhBwAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>